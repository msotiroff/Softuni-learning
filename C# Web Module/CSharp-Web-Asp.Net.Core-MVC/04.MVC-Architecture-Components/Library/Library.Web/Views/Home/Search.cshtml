@model SearchResultViewModel

@{
    ViewData["Title"] = "Search";
}

<div class="container-fluid text-center">
    <h1>Library</h1>

    <h3>Search results: "@Model.SearchTerm"</h3>
</div>
<br />

<div class="container-fluid">
    <table class="table table-striped table-hover center">
        <thead>
            <tr>
                <th width="30%">Title</th>
                <th width="50%">Originators</th>
                <th width="10%">Type</th>
                <th width="10%">Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in Model.Entries)
            {
                @Html.DisplayFor(m => entry);
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.Entries.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Entries.HasNextPage ? "disabled" : "";
    var firstDisabled = Model.Entries.PageIndex == 1 ? "disabled" : "";
    var lastDisabled = Model.Entries.TotalPages == Model.Entries.PageIndex ? "disabled" : "";
}
<div class="text-center">
    <a asp-route-pageIndex="1"
       asp-route-searchTerm="@Model.SearchTerm"
       class="btn btn-light @firstDisabled">
        First page
    </a>
    <a asp-route-pageIndex="@(Model.Entries.PageIndex - 1)"
       asp-route-searchTerm="@Model.SearchTerm"
       class="btn btn-light @prevDisabled">
        Previous
    </a>
    <span class="btn btn-light">
        @Model.Entries.PageIndex
    </span>
    <a asp-route-pageIndex="@(Model.Entries.PageIndex + 1)"
       asp-route-searchTerm="@Model.SearchTerm"
       class="btn btn-light @nextDisabled">
        Next
    </a>
    <a asp-route-pageIndex="@(Model.Entries.TotalPages)"
       asp-route-searchTerm="@Model.SearchTerm"
       class="btn btn-light @lastDisabled">
        Last page
    </a>
</div>